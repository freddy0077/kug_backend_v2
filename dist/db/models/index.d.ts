import { Sequelize } from 'sequelize';
import { initDogModel } from './Dog';
import { initOwnerModel } from './Owner';
import { initOwnershipModel } from './Ownership';
import { initDogImageModel } from './DogImage';
import { initHealthRecordModel } from './HealthRecord';
import { initCompetitionResultModel } from './CompetitionResult';
import { initEventModel } from './Event';
import { initClubModel } from './Club';
import { initClubEventModel } from './ClubEvent';
import { initEventRegistrationModel } from './EventRegistration';
import { initBreedingRecordModel } from './BreedingRecord';
import { initBreedingRecordPuppyModel } from './BreedingRecordPuppy';
import { initUserModel } from './User';
import { initSystemLogModel } from './SystemLog';
import { initAuditLogModel } from './AuditLog';
import BreedingProgram from './BreedingProgram';
import BreedingPair from './BreedingPair';
import BreedingProgramFoundationDog from './BreedingProgramFoundationDog';
import { Breed } from './Breed';
import { initLitterModel } from './Litter';
interface DB {
    sequelize: Sequelize;
    Sequelize: typeof Sequelize;
    Dog: ReturnType<typeof initDogModel>;
    Owner: ReturnType<typeof initOwnerModel>;
    Ownership: ReturnType<typeof initOwnershipModel>;
    DogImage: ReturnType<typeof initDogImageModel>;
    HealthRecord: ReturnType<typeof initHealthRecordModel>;
    CompetitionResult: ReturnType<typeof initCompetitionResultModel>;
    Event: ReturnType<typeof initEventModel>;
    Club: ReturnType<typeof initClubModel>;
    ClubEvent: ReturnType<typeof initClubEventModel>;
    EventRegistration: ReturnType<typeof initEventRegistrationModel>;
    BreedingRecord: ReturnType<typeof initBreedingRecordModel>;
    BreedingRecordPuppy: ReturnType<typeof initBreedingRecordPuppyModel>;
    User: ReturnType<typeof initUserModel>;
    SystemLog: ReturnType<typeof initSystemLogModel>;
    AuditLog: ReturnType<typeof initAuditLogModel>;
    BreedingProgram: typeof BreedingProgram;
    BreedingPair: typeof BreedingPair;
    BreedingProgramFoundationDog: typeof BreedingProgramFoundationDog;
    Breed: typeof Breed;
    Litter: ReturnType<typeof initLitterModel>;
    [key: string]: any;
}
declare const db: DB;
export default db;
